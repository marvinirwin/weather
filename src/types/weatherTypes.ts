// Base types for parameters
export interface BaseWeatherParams {
  lat: number;
  lon: number;
  units?: 'standard' | 'metric' | 'imperial';
}

export interface CurrentWeatherParams extends BaseWeatherParams {}

export interface ForecastParams extends BaseWeatherParams {}

export interface OneCallParams extends BaseWeatherParams {
  exclude?: string; // Comma-separated list of data blocks to exclude: current,minutely,hourly,daily,alerts
}

export interface AirPollutionParams {
  lat: number;
  lon: number;
}

// Union type for all weather card parameters
export type WeatherParams = 
  | CurrentWeatherParams 
  | ForecastParams 
  | OneCallParams 
  | AirPollutionParams;

// Card type definition
export interface WeatherCardType {
  type: 'current' | 'forecast' | 'onecall' | 'air_pollution';
  parameters: WeatherParams;
  rationale?: string; // Only provided when generated by Gemini
}

// Layout definition
export interface WeatherLayout {
  cards: WeatherCardType[];
}

// Weather data response types
export interface CurrentWeatherData {
  weather: Array<{
    id: number;
    main: string;
    description: string;
    icon: string;
  }>;
  main: {
    temp: number;
    feels_like: number;
    temp_min: number;
    temp_max: number;
    pressure: number;
    humidity: number;
  };
  wind: {
    speed: number;
    deg: number;
    gust?: number;
  };
  clouds: {
    all: number;
  };
  visibility: number;
  dt: number;
  sys: {
    country: string;
    sunrise: number;
    sunset: number;
  };
  timezone: number;
  name: string;
}

export interface ForecastData {
  list: Array<{
    dt: number;
    main: {
      temp: number;
      feels_like: number;
      temp_min: number;
      temp_max: number;
      pressure: number;
      humidity: number;
    };
    weather: Array<{
      id: number;
      main: string;
      description: string;
      icon: string;
    }>;
    clouds: {
      all: number;
    };
    wind: {
      speed: number;
      deg: number;
      gust?: number;
    };
    visibility: number;
    pop: number; // Probability of precipitation
    dt_txt: string;
  }>;
  city: {
    name: string;
    country: string;
    sunrise: number;
    sunset: number;
  };
}

export interface AirPollutionData {
  list: Array<{
    dt: number;
    main: {
      aqi: number; // Air Quality Index
    };
    components: {
      co: number; // Carbon monoxide
      no: number; // Nitrogen monoxide
      no2: number; // Nitrogen dioxide
      o3: number; // Ozone
      so2: number; // Sulphur dioxide
      pm2_5: number; // Fine particles
      pm10: number; // Coarse particulate matter
      nh3: number; // Ammonia
    };
  }>;
} 